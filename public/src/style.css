.analyseContainer {
  height: 100vh;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center; }
  .analyseContainer .analyseTextContainer {
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-start;
    margin-right: 32px;
    max-width: 30vw;
    color: white; }
  .analyseContainer .analyseDragAndDropContainer {
    display: flex;
    flex-flow: column nowrap;
    align-items: stretch; }
    .analyseContainer .analyseDragAndDropContainer .dragAndDropArea {
      width: 20vw;
      height: 20vw;
      border: 5px dashed #69f0ae;
      margin: 15px;
      border-radius: 26px;
      display: flex;
      flex-flow: column nowrap;
      justify-content: center;
      align-items: center;
      min-width: 140px;
      color: #69f0ae; }
      .analyseContainer .analyseDragAndDropContainer .dragAndDropArea svg {
        fill: #69f0ae !important; }

* {
  font-family: Roboto, Arial, sans-serif; }

html {
  background-repeat: repeat-x;
  background-image: -webkit-linear-gradient(45deg, #e0a3f6, #fcc389);
  background-image: -o-linear-gradient(45deg, #e0a3f6, #fcc389);
  background-image: linear-gradient(45deg, #e0a3f6, #fcc389);
  height: 100vh; }

body {
  margin: 0 0 0 256px; }

#jobads-webapp {
  height: 100vh; }

.menuAppBar {
  background-color: #303030 !important; }
  .menuAppBar img {
    position: relative;
    top: 9px; }
  .menuAppBar h1 {
    color: white !important; }
  .menuAppBar svg {
    fill: #7d7d7d !important; }

.badge {
  font-size: 12px;
  text-transform: uppercase;
  padding: 4px;
  background: #69f0ae;
  border-radius: 3px;
  color: white; }

.test {
  min-width: 100px;
  min-height: 300px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
